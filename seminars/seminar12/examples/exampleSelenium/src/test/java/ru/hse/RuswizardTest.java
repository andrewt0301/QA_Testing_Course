package ru.hse;// Generated by Selenium IDE

import java.util.concurrent.TimeUnit;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;

public class RuswizardTest {
  private WebDriver driver;
  private JavascriptExecutor js;

  @Before
  public void setUp() {
    this.driver = new ChromeDriver();
    this.driver.manage().timeouts().implicitlyWait(5000, TimeUnit.MILLISECONDS);
    this.driver.manage().timeouts().setScriptTimeout(5000, TimeUnit.MILLISECONDS);
    this.driver.manage().timeouts().pageLoadTimeout(5000, TimeUnit.MILLISECONDS);
    this.js = (JavascriptExecutor) driver;
  }

  @After
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void test() throws InterruptedException {
    // Test name: Test
    // Step # | name | target | value
    // 1 | open | /test/ | 
    driver.get("https://ruswizard.site//test/");
    // 2 | click | linkText=Войти | 
    final WebElement enter = driver.findElement(By.linkText("Войти"));
    clickHack(enter);
    // 3 | click | id=user_login |
    driver.findElement(By.id("user_login")).click();
    // 4 | type | id=user_login | student
    driver.findElement(By.id("user_login")).sendKeys("student");
    // 5 | type | id=user_pass | student
    driver.findElement(By.id("user_pass")).sendKeys("student");
    // 6 | sendKeys | id=user_pass | ${KEY_ENTER}
    driver.findElement(By.id("user_pass")).sendKeys(Keys.ENTER);
    // 7 | click | css=.menu-icon-post > .wp-menu-name | 
    driver.findElement(By.cssSelector(".menu-icon-post > .wp-menu-name")).click();
    // 8 | click | linkText=Добавить новую | 
    driver.findElement(By.linkText("Добавить новую")).click();
    // 9 | type | id=post-title-0 | test185
    driver.findElement(By.id("post-title-0")).sendKeys("test185");
    // 10 | click | css=.edit-post-post-visibility__toggle | 
    driver.findElement(By.cssSelector(".edit-post-post-visibility__toggle")).click();
    // 12 | click | id=editor-post-private-0 | 
    driver.findElement(By.id("editor-post-private-0")).click();
    // 13 | assertConfirmation | Вы хотите опубликовать запись как личную? |
    Thread.sleep(5000);
    assertThat(driver.switchTo().alert().getText(), is("Вы хотите опубликовать запись как личную?"));
    // 14 | webdriverChooseOkOnVisibleConfirmation |  | 
    driver.switchTo().alert().accept();
    // 15 | click | id=post-title-0 | 
    driver.findElement(By.id("post-title-0")).click();
    // 16 | click | css=.block-editor-default-block-appender__content | 
    driver.findElement(By.cssSelector(".block-editor-default-block-appender__content")).click();
    // 17 | editContent | css=.block-editor-rich-text__editable | asdasdasdasd
    {
      WebElement element = driver.findElement(By.cssSelector(".block-editor-rich-text__editable"));
      js.executeScript("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = 'asdasdasdasd'}", element);
    }
    // 18 | click | css=.block-editor-writing-flow__click-redirect | 
    driver.findElement(By.cssSelector(".block-editor-writing-flow__click-redirect")).click();
    // 19 | click | css=.editor-post-publish-button | 
    driver.findElement(By.cssSelector(".editor-post-publish-button")).click();
    // 20 | mouseOver | css=.editor-post-publish-button | 
    {
      WebElement element = driver.findElement(By.cssSelector(".editor-post-publish-button"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 21 | mouseOut | css=.editor-post-publish-button | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 22 | click | css=li:nth-child(1) > .edit-post-sidebar__panel-tab | 
    driver.findElement(By.cssSelector("li:nth-child(1) > .edit-post-sidebar__panel-tab")).click();
    // 23 | open | /test/ | 
    driver.get("https://ruswizard.site//test/");
    // 24 | mouseOver | id=wp-admin-bar-my-account | 
    {
    Thread.sleep(5000);
    WebElement element = driver.findElement(By.id("wp-admin-bar-my-account"));
    Actions builder = new Actions(driver);
    builder.moveToElement(element).perform();
    }
   // 25 | click | xpath=//a[contains(.,'Выйти')] |
    Thread.sleep(5000);
    final WebElement exit = driver.findElement(By.linkText("Выйти"));
    clickHack(exit);
  }

  private void clickHack(final WebElement element) {
    try {
      element.click();
    } catch (final WebDriverException e){
      js.executeScript("arguments[0].click()", element) ;
    }
  }

}
